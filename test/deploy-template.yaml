---
apiVersion: template.openshift.io/v1
kind: Template
metadata:
  annotations:
    description: Test ubi9-oauth2-proxy
  name: ubi9-oauth2-proxy-test

parameters:
- name: NAME
  required: true
  value: ubi9-oauth2-proxy-test
- name: COOOKIE_SECRET
  from: '[a-zA-Z0-9]{20}'
  generate: expression
  required: true
- name: CLIENT_ID
  required: true
- name: CLIENT_SECRET
  required: true
- name: EMAIL_DOMAIN
  value: "*"
  required: true
- name: OIDC_ISSUER_URL
  required: true

objects:
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      image.openshift.io/triggers: >-
        [
          {
            "from": {
              "kind": "ImageStreamTag",
              "name": "ubi9-oauth2-proxy:latest"
            },
            "fieldPath": "spec.template.spec.containers[?(@.name==\"oauth2-proxy\")].image",
          }
        ]
    name: ${NAME}
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/name: ${NAME}
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          app.kubernetes.io/name: ${NAME}
      spec:
        containers:
        - name: oauth2-proxy
          command:
          - oauth2-proxy
          args:
          - "--client-id=${CLIENT_ID}"
          - "--client-secret=${CLIENT_SECRET}"
          - "--cookie-secret=${COOKIE_SECRET}"
          - "--email-domain=${EMAIL_DOMAIN}"
          - "--http-address=0.0.0.0:4180"
          - "--insecure-oidc-allow-unverified-email"
          - "--oidc-issuer-url=${OIDC_ISSUER_URL}"
          - "--provider=oidc"
          - "--upstream=http://localhost:8080/"
          image: image-registry.openshift-image-registry.svc:5000/ubi9-oauth2-proxy/ubi9-oauth2-proxy:latest
          imagePullPolicy: Always
          ports:
          - name: http
            containerPort: 4180
        - name: httpd
          image: registry.access.redhat.com/ubi9/httpd-24:latest
          ports:
          - name: http
            containerPort: 8080
- apiVersion: v1
  kind: Service
  metadata:
    name: ${NAME}
  spec:
    ports:
    - name: http
      port: 4180
      protocol: TCP
      targetPort: 4180
    selector:
      app.kubernetes.io/name: ${NAME}
    type: ClusterIP
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    name: ${NAME}
  spec:
    port:
      targetPort: http
    tls:
      termination: edge
    to:
      kind: Service
      name: ${NAME}
